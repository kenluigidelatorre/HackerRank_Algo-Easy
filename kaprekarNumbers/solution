using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Collections;
using System.ComponentModel;
using System.Diagnostics.CodeAnalysis;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Runtime.Serialization;
using System.Text.RegularExpressions;
using System.Text;
using System;

class Result
{

    /*
     * Complete the 'kaprekarNumbers' function below.
     *
     * The function accepts following parameters:
     *  1. INTEGER p
     *  2. INTEGER q
     */

    public static void kaprekarNumbers(int p, int q)
    {
    List<int> kaprekars = new List<int>();

    for (int n = p; n <= q; n++)
    {
        long sq = (long)n * n;
        string sqStr = sq.ToString();
        int d = n.ToString().Length;

        string rightPartStr = sqStr.Length >= d ? sqStr.Substring(sqStr.Length - d) : sqStr;
        string leftPartStr = sqStr.Length > d ? sqStr.Substring(0, sqStr.Length - d) : "0";

        int rightPart = int.Parse(rightPartStr);
        int leftPart = int.Parse(leftPartStr);

        if (leftPart + rightPart == n)
        {
            kaprekars.Add(n);
        }
    }

    if (kaprekars.Count == 0)
        Console.WriteLine("INVALID RANGE");
    else
        Console.WriteLine(string.Join(" ", kaprekars));
    }

}

class Solution
{
    public static void Main(string[] args)
    {
        int p = Convert.ToInt32(Console.ReadLine().Trim());

        int q = Convert.ToInt32(Console.ReadLine().Trim());

        Result.kaprekarNumbers(p, q);
    }
}
